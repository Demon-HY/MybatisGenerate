package ${table.packageName}.api;

import org.demon.framework.common.entity.ClientResult;
import org.demon.framework.common.entity.Pager;
import org.demon.framework.common.retCode.BaseRetCode;
import ${table.packageName}.model.entity.${table.className};
import ${table.packageName}.model.query.${table.className}QueryDto;
import ${table.packageName}.service.${table.className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class ${table.className}Api implements I${table.className}Api {

	@Autowired
	private ${table.className}Service ${table.classNameFirstLower}Service;
	
	@Override
	public ClientResult<${table.className}> getById(@RequestParam("id") Long id) {
		if (id <= 0) {
			return ClientResult.error(BaseRetCode.ERR_BAD_PARAMS);
		}
	
		return ClientResult.success(${table.classNameFirstLower}Service.getById(id));
	}

    @Override
    public ClientResult<${table.className}> findOne(${table.className}QueryDto queryDto) {
        return ClientResult.success(${table.classNameFirstLower}Service.findOne(queryDto));
    }

	@Override
	public ClientResult<Pager<${table.className}>> list(@RequestBody ${table.className}QueryDto queryDto,
										                @RequestParam("pageNo") Integer pageNo,
										   				@RequestParam("pageSize") Integer pageSize) {
		pageNo = pageNo < 1 ? 1 : pageNo;
		pageSize = pageSize > 200 ? 200 : pageSize;
		return ClientResult.success(${table.classNameFirstLower}Service.list(queryDto, pageNo, pageSize));
	}

	@Override
	public ClientResult<${table.className}> insert(@RequestBody ${table.className} ${table.classNameFirstLower}) {
		${table.classNameFirstLower}Service.insert(${table.classNameFirstLower});
		return ClientResult.success(${table.classNameFirstLower});
	}

	@Override
	public ClientResult<${table.className}> update(@RequestBody ${table.className} ${table.classNameFirstLower}) {
		${table.classNameFirstLower}Service.update(${table.classNameFirstLower});
		return ClientResult.success(${table.classNameFirstLower});
	}
}
