package ${table.packageName}.api;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.demon.framework.common.entity.ClientResult;
import org.demon.framework.common.entity.Pager;
import org.demon.module.ServiceName;
import ${table.packageName}.model.entity.${table.className};
import ${table.packageName}.model.query.${table.className}QueryDto;
import org.demon.sdk.config.PostJsonMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

/**
 * ${table.tableComment} 内部模块访问接口
 *
 * @author ${author}
 * @since 1.0
 */
@Api(description = "${table.tableComment} 内部模块访问接口")
@FeignClient(ServiceName.SERVICE_NAME)
public interface I${table.className}Api {

    /**
     * 通过主键获取${table.tableComment}
     */
    @ApiOperation(value = "通过主键获取")
    @GetMapping(value = "${table.moduleName}/inner/get/by/id")
	ClientResult<${table.className}> getById(@RequestParam("id") Long id);

    /**
     * 查询单个 ${table.moduleName}
     */
    @ApiOperation(value = "查询单个 ${table.moduleName}")
    @PostJsonMapping(value = "${table.moduleName}/inner/find/one")
    ClientResult<${table.className}> findOne(@RequestBody ${table.className}QueryDto queryDto);

    /**
     * ${table.tableComment} 分页查询
     */
    @ApiOperation(value = "${table.tableComment} 分页查询")
    @PostJsonMapping(value = "${table.moduleName}/inner/get/list")
    ClientResult<Pager<${table.className}>> list(@RequestBody ${table.className}QueryDto queryDto,
                                   @RequestParam("pageNo") Integer pageNo,
                                   @RequestParam("pageSize") Integer pageSize);

    /**
     * ${table.tableComment} 插入
     */
    @ApiOperation(value = "${table.tableComment} 插入")
    @PostJsonMapping(value = "${table.moduleName}/inner/insert")
    ClientResult<${table.className}> insert(@RequestBody ${table.className} ${table.classNameFirstLower});

    /**
     * ${table.tableComment} 更新
     */
    @ApiOperation(value = "${table.tableComment} 更新")
    @PostJsonMapping(value = "${table.moduleName}/inner/update")
    ClientResult<${table.className}> update(@RequestBody ${table.className} ${table.classNameFirstLower});
}
